Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>version: \"3\"\r\nservices:\r\n  backend:\r\n    container_name: backend-dev\r\n    image: 471112833916.dkr.ecr.eu-central-1.amazonaws.com/my-app_backend:dev\r\n    environment:\r\n      - PROFILE=default\r\n      - DB_USER=cjaquiery\r\n      - DB_PASS=**********\r\n      - DB_INSTANCE=mywebapp\r\n      - SPRING_LOG_LEVEL=INFO\r\n    labels:\r\n      - \"traefik.enable=true\"\r\n      - \"traefik.http.routers.backend.rule=Host(`cesarjaquiery.ch`) && PathPrefix(`/api/`)\"\r\n      - \"traefik.http.services.backend.loadbalancer.server.port=8080\"\r\n    networks:\r\n      - frontend\r\n    healthcheck:\r\n      test: [\"CMD-SHELL\", \"curl -f http://localhost:8080/actuator/health || exit 1\"]\r\n      interval: 45s\r\n      timeout: 20s\r\n      retries: 5\r\n    logging:\r\n      driver: awslogs\r\n      options:\r\n        awslogs-group: My-App\r\n        awslogs-region: eu-central-1\r\n        awslogs-stream-prefix: Spring-BE\r\n\r\n  frontend:\r\n    container_name: frontend-dev\r\n    image: 471112833916.dkr.ecr.eu-central-1.amazonaws.com/my-app_frontend:dev\r\n    labels:\r\n      - \"traefik.enable=true\"\r\n      - \"traefik.http.routers.frontend.rule=Host(`cesarjaquiery.ch`)\"\r\n      - \"traefik.http.services.frontend.loadbalancer.server.port=80\"\r\n    networks:\r\n      - frontend\r\n    healthcheck:\r\n      test: [\"CMD-SHELL\", \"curl -f http://localhost/ || exit 1\"]\r\n      interval: 30s\r\n      timeout: 10s\r\n      retries: 3\r\n    logging:\r\n      driver: awslogs\r\n      options:\r\n        awslogs-group: My-App\r\n        awslogs-region: eu-central-1\r\n        awslogs-stream-prefix: React-FE\r\n\r\n  traefik:\r\n    image: traefik:v2.11\r\n    container_name: traefik\r\n    command:\r\n      - \"--api.insecure=true\"\r\n      - \"--providers.docker=true\"\r\n      - \"--entrypoints.web.address=:80\"\r\n      - \"--providers.docker.exposedbydefault=false\"\r\n      - \"--entrypoints.websecure.address=:443\"\r\n      - \"--ping\"\r\n    ports:\r\n      - \"80:80\"\r\n      - \"443:443\"\r\n    volumes:\r\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\r\n    depends_on:\r\n      - backend\r\n      - frontend\r\n    networks:\r\n      - frontend\r\n    labels:\r\n      - \"traefik.http.services.traefik.loadbalancer.healthcheck.path=/health\"\r\n      - \"traefik.http.services.traefik.loadbalancer.healthcheck.interval=10s\"\r\n      - \"traefik.http.services.traefik.loadbalancer.healthcheck.timeout=5s\"\r\n    healthcheck:\r\n      test: [\"CMD\", \"traefik\", \"healthcheck\", \"--ping\"]\r\n      interval: 45s\r\n      timeout: 20s\r\n      retries: 5\r\n    logging:\r\n      driver: awslogs\r\n      options:\r\n        awslogs-group: My-App\r\n        awslogs-region: eu-central-1\r\n        awslogs-stream-prefix: Traefik\r\n\r\nnetworks:\r\n  frontend:\r\n    driver: bridge
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yml b/docker-compose.yml
--- a/docker-compose.yml	(revision e61e12c45d28e94275f6fa8b49f61b85e484d5aa)
+++ b/docker-compose.yml	(date 1742041996966)
@@ -6,7 +6,7 @@
     environment:
       - PROFILE=default
       - DB_USER=cjaquiery
-      - DB_PASS=**********
+      - DB_PASS=XP1WkTNvehWMwckp
       - DB_INSTANCE=mywebapp
       - SPRING_LOG_LEVEL=INFO
     labels:
@@ -23,7 +23,7 @@
     logging:
       driver: awslogs
       options:
-        awslogs-group: My-App
+        awslogs-group: My-App-Cluster
         awslogs-region: eu-central-1
         awslogs-stream-prefix: Spring-BE
 
@@ -44,7 +44,7 @@
     logging:
       driver: awslogs
       options:
-        awslogs-group: My-App
+        awslogs-group: My-App-Cluster
         awslogs-region: eu-central-1
         awslogs-stream-prefix: React-FE
 
@@ -58,6 +58,13 @@
       - "--providers.docker.exposedbydefault=false"
       - "--entrypoints.websecure.address=:443"
       - "--ping"
+      - "--log.level=ERROR"
+      - "--log.format=json"
+      - "--accesslog=true"
+      - "--accesslog.format=json"
+      - "--accesslog.fields.headers.names.X-Real-IP=keep"
+      - "--entrypoints.web.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
+      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
     ports:
       - "80:80"
       - "443:443"
@@ -72,6 +79,8 @@
       - "traefik.http.services.traefik.loadbalancer.healthcheck.path=/health"
       - "traefik.http.services.traefik.loadbalancer.healthcheck.interval=10s"
       - "traefik.http.services.traefik.loadbalancer.healthcheck.timeout=5s"
+      - "traefik.http.middlewares.forward-headers.forwardedHeaders.insecure=true"
+      - "traefik.http.routers.backend.middlewares=forward-headers"
     healthcheck:
       test: ["CMD", "traefik", "healthcheck", "--ping"]
       interval: 45s
@@ -80,7 +89,7 @@
     logging:
       driver: awslogs
       options:
-        awslogs-group: My-App
+        awslogs-group: My-App-Cluster
         awslogs-region: eu-central-1
         awslogs-stream-prefix: Traefik
 
Index: src/main/java/com/example/myproject/controller/RequestHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myproject.controller;\r\n\r\nimport com.example.myproject.model.Account;\r\nimport com.example.myproject.model.Blog;\r\nimport com.example.myproject.repository.AccountRepository;\r\nimport com.example.myproject.repository.BlogRepository;\r\nimport com.example.myproject.service.AccountService;\r\nimport com.example.myproject.service.BlogService;\r\nimport com.example.myproject.service.PDFService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.springframework.context.annotation.PropertySource;\r\nimport org.springframework.core.io.Resource;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.server.ResponseStatusException;\r\nimport java.net.MalformedURLException;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * Handles incoming HTTP requests for account management, blog operations,\r\n * and PDF downloads. This controller provides endpoints for registering,\r\n * logging in and out of accounts, retrieving account and blog information,\r\n * and downloading PDF resources.\r\n */\r\n@RestController\r\n@CrossOrigin(origins = {\"http://frontend:80\", \"http://localhost:3000\"})\r\n@PropertySource(\"classpath:application.properties\")\r\npublic class RequestHandler {\r\n\r\n    private static final Logger logger = LogManager.getLogger(RequestHandler.class);\r\n    private final AccountRepository accountRepository;\r\n    private final AccountService accountService;\r\n    private final BlogRepository blogRepository;\r\n    private final PDFService pdfService;\r\n    private final BlogService blogService;\r\n\r\n    public RequestHandler(AccountRepository accountRepository,\r\n                          AccountService accountService,\r\n                          BlogRepository blogRepository,\r\n                          PDFService pdfService,\r\n                          BlogService blogService) {\r\n        this.accountRepository = accountRepository;\r\n        this.accountService = accountService;\r\n        this.blogRepository = blogRepository;\r\n        this.pdfService = pdfService;\r\n        this.blogService = blogService;\r\n    }\r\n\r\n    @PostMapping(path = \"api/register\", produces = \"application/json\")\r\n    public ResponseEntity<String> registerUser(@RequestBody Map<String, String> request) {\r\n        logger.info(\"Registering new user.\");\r\n        return accountService.registerUser(request);\r\n    }\r\n\r\n    @PostMapping(path = \"api/login\", produces = \"application/json\")\r\n    public ResponseEntity<String> loginUser(@RequestBody Map<String, String> request) {\r\n        return accountService.loginUser(request);\r\n    }\r\n\r\n    @PostMapping(path = \"api/logout\", produces = \"application/json\")\r\n    public ResponseEntity<Map<String, Object>> logoutUser(@RequestHeader(\"Authorization\") String token) {\r\n        return accountService.logoutUser(token);\r\n    }\r\n\r\n\r\n    @GetMapping(path = \"api/account/{id}\", produces = \"application/json\") //TODO: in getaccount umbenennen\r\n    public Account getAccountById(@PathVariable String id) { //TODO: Logger?\r\n        return accountRepository.findById(id).orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND));\r\n    }\r\n\r\n    @GetMapping(path = \"api/dashboard\", produces = \"application/json\")\r\n    public ResponseEntity<Account> getAccountInfoByToken(Authentication authentication) {\r\n        return accountService.getAccountInfoByToken(authentication);\r\n    }\r\n\r\n    @GetMapping(path = \"api/blog/{id}\", produces = \"application/json\") //TODO: Logger? //TODO: in getblog umbenennen\r\n    public Blog getBlogById(@PathVariable String id) {\r\n        return blogRepository.findById(id).orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND));\r\n    }\r\n\r\n    @GetMapping(path = \"api/getBlogs\", produces = \"application/json\") //TODO: Logger? TODO: Errorhandling\r\n    public List<Blog> getBlogs(HttpServletRequest request) {\r\n        return blogService.getBlogs(request);\r\n    }\r\n\r\n    @GetMapping(path = \"api/downloadPDF/{fileName}\", produces = \"application/json\")\r\n    public ResponseEntity<Resource> downloadPDF(@PathVariable String fileName) throws MalformedURLException {\r\n        return pdfService.downloadPDF(fileName);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/myproject/controller/RequestHandler.java b/src/main/java/com/example/myproject/controller/RequestHandler.java
--- a/src/main/java/com/example/myproject/controller/RequestHandler.java	(revision e61e12c45d28e94275f6fa8b49f61b85e484d5aa)
+++ b/src/main/java/com/example/myproject/controller/RequestHandler.java	(date 1742041996953)
@@ -28,7 +28,7 @@
  * and downloading PDF resources.
  */
 @RestController
-@CrossOrigin(origins = {"http://frontend:80", "http://localhost:3000"})
+@CrossOrigin(origins = {"https://cesarjaquiery.ch", "http://localhost:3000"})
 @PropertySource("classpath:application.properties")
 public class RequestHandler {
 
Index: .idea/aws.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"accountSettings\">\r\n    <option name=\"activeRegion\" value=\"us-east-1\" />\r\n    <option name=\"recentlyUsedRegions\">\r\n      <list>\r\n        <option value=\"us-east-1\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/aws.xml b/.idea/aws.xml
--- a/.idea/aws.xml	(revision e61e12c45d28e94275f6fa8b49f61b85e484d5aa)
+++ b/.idea/aws.xml	(date 1742041996979)
@@ -1,11 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="accountSettings">
-    <option name="activeRegion" value="us-east-1" />
+    <option name="activeProfile" value="profile:default" />
+    <option name="activeRegion" value="eu-central-1" />
+    <option name="recentlyUsedProfiles">
+      <list>
+        <option value="profile:default" />
+      </list>
+    </option>
     <option name="recentlyUsedRegions">
       <list>
+        <option value="eu-central-1" />
         <option value="us-east-1" />
       </list>
     </option>
   </component>
+  <component name="explorerToolWindow">
+    <option name="selectedTab" value="Amazon Q" />
+  </component>
 </project>
\ No newline at end of file
